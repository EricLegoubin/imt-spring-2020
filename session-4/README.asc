 = Spring Framework - Cours - Session 4

== Que la magie s'en aille !

Petite introduction sur les limites des frameworks

== Ouvrons le capot

=== De Bean Factory à @Autowired

==== Etape 1

.Dependencies

* org.springframework:spring-core
* org.springframework:spring-beans

.Class

* org.springframework.beans.factory.support.StaticListableBeanFactory

.Concepts

* Factory
* Service Locator

==== Etape 2

.Dependencies

* org.springframework:spring-context

.Class

* org.springframework.context.support.ClassPathXmlApplicationContext

application-context.xml

[code]
..
<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    
    <!-- -->
</beans>
..

.Concepts

* Bean reference
* Scope
* Life cycle

==== Etape 3

.Schéma XSD

* http://www.springframework.org/schema/context

.Concepts

* Autowire

==== Etape 4

.Concepts

* Annotation

=== De JDBC à JdbcTemplate

==== Etape 0

Dépendances

* org.springframework:spring-core
* org.springframework:spring-jdbc
* com.h2database:h2

==== Etape 1

.Classes

* org.springframework.jdbc.core.JdbcTemplate
* org.springframework.jdbc.datasource.DriverManagerDataSource

==== Etape 2

Dépendances

* org.springframework:spring-beans
* org.springframework:spring-context

==== Etape 3

Dépendances

* org.springframework.boot:spring-starter-data-jpa

.Concept

* Proxy

=== AOP

.Concept

* Advice, PointCut, Aspect

=== Autoconfigure, ou le framework extensible

Activer la console H2

== Quizz

Un https://forms.gle/DBTHnYFz1EZ5x94v8[Quizz] de 15 mn pour clore l'évaluation

Ensuite, vous pouvez donner votre avis sur le cours dans ce https://forms.gle/nKj74mC3YVWTVwcp9[questionnaire] Merci pour votre retour.

Une pause de 15 mn s'ensuit pour débriefer du cours

== Debriefing du cours

* Retour sur le quizz et le questionnaire de satisfaction.
* Notes globales de la classe
* Dernières questions et remarques






==
 == JdbcTemplate


 try (Connection connection = DriverManager.getConnection("jdbc:h2:mem:testdb"); Statement statement = connection.createStatement()) {

            statement.execute("CREATE TABLE Movies ("
                    + "id INT AUTO_INCREMENT PRIMARY KEY, "
                    + "name VARCHAR(128) NOT NULL, "
                    + "description VARCHAR(128) DEFAULT NULL"
                    + ")");


            statement.execute("INSERT INTO Movies (id, name, description) values (1, 'Les Tuches', 'Comédie, 2011')");

            ResultSet resultSet = statement.executeQuery("SELECT id, name, description FROM Movies");
            while (resultSet.next()) {
                int id = resultSet.getInt(1);
                String name = resultSet.getString(2);
                String description = resultSet.getString(3);
                System.out.printf("Find movie (%d) %s : %s", id, name, description);
            }
        }


https://spring.io/guides/gs/relational-data-access/       

== CrudRepository

https://docs.spring.io/spring/docs/3.0.0.M3/reference/html/ch08s06.html

== Autoconfigure

org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration 